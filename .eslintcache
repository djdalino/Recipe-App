[{"/Users/hannaclaros/Desktop/dadada/React/recipe-app/src/index.js":"1","/Users/hannaclaros/Desktop/dadada/React/recipe-app/src/App.js":"2","/Users/hannaclaros/Desktop/dadada/React/recipe-app/src/reportWebVitals.js":"3","/Users/hannaclaros/Desktop/dadada/React/recipe-app/src/components/Recipes/recipe.jsx":"4","/Users/hannaclaros/Desktop/dadada/React/recipe-app/src/context/ContextWrapper.jsx":"5","/Users/hannaclaros/Desktop/dadada/React/recipe-app/src/context/HeaderContext.jsx":"6","/Users/hannaclaros/Desktop/dadada/React/recipe-app/src/components/Recipes/recipeSingleView.jsx":"7","/Users/hannaclaros/Desktop/dadada/React/recipe-app/src/components/Recipes/ingredients.jsx":"8","/Users/hannaclaros/Desktop/dadada/React/recipe-app/src/components/Recipes/directions.jsx":"9","/Users/hannaclaros/Desktop/dadada/React/recipe-app/src/components/Navbar/navbar.jsx":"10","/Users/hannaclaros/Desktop/dadada/React/recipe-app/src/components/Cards/recipeCards.jsx":"11","/Users/hannaclaros/Desktop/dadada/React/recipe-app/src/components/Recipes/recipeEdit.jsx":"12","/Users/hannaclaros/Desktop/dadada/React/recipe-app/src/components/Recipes/recipeAdd.jsx":"13"},{"size":692,"mtime":1611324097753,"results":"14","hashOfConfig":"15"},{"size":776,"mtime":1611418162854,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1611295133206,"results":"17","hashOfConfig":"15"},{"size":457,"mtime":1611436430869,"results":"18","hashOfConfig":"15"},{"size":764,"mtime":1611576024475,"results":"19","hashOfConfig":"15"},{"size":114,"mtime":1611310834625,"results":"20","hashOfConfig":"15"},{"size":2099,"mtime":1611432418005,"results":"21","hashOfConfig":"15"},{"size":1348,"mtime":1611404184207,"results":"22","hashOfConfig":"15"},{"size":314,"mtime":1611373648913,"results":"23","hashOfConfig":"15"},{"size":1373,"mtime":1611444924435,"results":"24","hashOfConfig":"15"},{"size":802,"mtime":1611444958518,"results":"25","hashOfConfig":"15"},{"size":7820,"mtime":1611487128463,"results":"26","hashOfConfig":"15"},{"size":9856,"mtime":1611580392816,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1yesbc0",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/hannaclaros/Desktop/dadada/React/recipe-app/src/index.js",[],["57","58"],"/Users/hannaclaros/Desktop/dadada/React/recipe-app/src/App.js",[],"/Users/hannaclaros/Desktop/dadada/React/recipe-app/src/reportWebVitals.js",[],"/Users/hannaclaros/Desktop/dadada/React/recipe-app/src/components/Recipes/recipe.jsx",[],"/Users/hannaclaros/Desktop/dadada/React/recipe-app/src/context/ContextWrapper.jsx",[],"/Users/hannaclaros/Desktop/dadada/React/recipe-app/src/context/HeaderContext.jsx",[],"/Users/hannaclaros/Desktop/dadada/React/recipe-app/src/components/Recipes/recipeSingleView.jsx",[],"/Users/hannaclaros/Desktop/dadada/React/recipe-app/src/components/Recipes/ingredients.jsx",["59"],"import React, { useState, useEffect } from \"react\";\n\nconst Ingredients = ({ ingredients }) => {\n  const { name, amount, measurement, uuid } = ingredients;\n\n  const [specialData, setSpecialData] = useState([]);\n  useEffect(() => {\n    specialMatch();\n  }, []);\n  const specialMatch = async () => {\n    try {\n      const res = await fetch(`http://localhost:3001/specials`);\n      const data = await res.json();\n      const find = data.filter(item => item.ingredientId === uuid);\n\n      setSpecialData(find);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"d-flex  align-items-center\">\n        <p className=\"m-1\">{amount}</p>\n        <p className=\"m-1\">{measurement}</p>\n        <p className=\"m-1\">{name}</p>\n      </div>\n\n      <div className=\"m-1\">\n        {specialData.map((item, i) => {\n          return (\n            <div key={i}>\n              <span className=\"badge bg-primary fw-bold m-1\">\n                {item.title}{\" \"}\n              </span>\n              <span className=\"badge bg-primary fw-normal m-1\">\n                {item.type}{\" \"}\n              </span>\n              <span className=\"badge bg-primary fw-light m-1\">\n                {item.text}{\" \"}\n              </span>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default Ingredients;\n","/Users/hannaclaros/Desktop/dadada/React/recipe-app/src/components/Recipes/directions.jsx",[],"/Users/hannaclaros/Desktop/dadada/React/recipe-app/src/components/Navbar/navbar.jsx",[],"/Users/hannaclaros/Desktop/dadada/React/recipe-app/src/components/Cards/recipeCards.jsx",[],"/Users/hannaclaros/Desktop/dadada/React/recipe-app/src/components/Recipes/recipeEdit.jsx",["60","61","62"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nconst RecipeEdit = props => {\n  const idParam = props.match.params.id;\n  // const { results } = useContext(HeaderContext);\n  const [data, setData] = useState([]);\n  const [ingredientArr, setIngredientArr] = useState([]);\n  const [directionsArr, setDirectionsArr] = useState([]);\n  useEffect(() => {\n    getMatchData(idParam);\n  }, [idParam]);\n  const handleInputChange = e => {\n    const { name, value } = e.target;\n\n    setData({ ...data, [name]: value });\n  };\n  const handleIngredientChange = (e, i) => {\n    const { name, value } = e.target;\n\n    setIngredientArr(prevState => {\n      const res = [...prevState];\n      res[i] = { ...res[i], [name]: value };\n      return res;\n    });\n\n    // setIngredientArr(prevState => [...prevState, { [name]: value }]);\n\n    // setIngredientArr({ ...ingredientArr, [name]: value });\n  };\n\n  const getMatchData = async id => {\n    try {\n      const res = await axios.get(`http://localhost:3001/recipes/${id}`);\n      setData(res.data);\n      setIngredientArr(res.data.ingredients);\n      setDirectionsArr(res.data.directions);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const { title, description, servings, prepTime, cookTime } = data;\n\n  return (\n    <form className=\"container d-flex flex-column mt-3\">\n      <div className=\"col-9 mb-3 mx-auto\">\n        <label htmlFor=\"title\" className=\"fw-bold form-label\">\n          Title\n        </label>\n        <input\n          type=\"text\"\n          name=\"title\"\n          className=\"form-control\"\n          id=\"title\"\n          value={title}\n          onChange={handleInputChange}\n        />\n      </div>\n      <div className=\"col-9 mx-auto\">\n        <div className=\"row\">\n          <div className=\"col\">\n            <div className=\"mb-3 mx-auto\">\n              <label htmlFor=\"descriptions\" className=\"fw-bold form-label\">\n                Description\n              </label>\n              <textarea\n                className=\"form-control mb-3\"\n                name=\"description\"\n                id=\"descriptions\"\n                rows=\"3\"\n                value={description}\n                onChange={handleInputChange}\n              ></textarea>\n              <div className=\"row mb-3  \">\n                <div className=\"col\">\n                  <label htmlFor=\"Ingredients\" className=\"fw-bold form-label\">\n                    Ingredients:\n                  </label>\n                </div>\n              </div>\n              {ingredientArr.map((ing, i) => {\n                return (\n                  <div className=\"card mx-auto col \">\n                    <div className=\"card-body\">\n                      <div className=\"row mb-3 col-9 mx-auto\">\n                        <input\n                          type=\"text\"\n                          name=\"amount\"\n                          className=\"form-control\"\n                          id=\"amount\"\n                          placeholder=\"Amount\"\n                          value={ing.amount}\n                        />\n                        <input\n                          type=\"text\"\n                          name=\"measurements\"\n                          className=\"form-control\"\n                          id=\"measurement\"\n                          placeholder=\"measurement\"\n                          value={ing.measurement}\n                        />\n                        <input\n                          type=\"text\"\n                          name=\"name\"\n                          className=\"form-control\"\n                          id=\"name\"\n                          placeholder=\"name\"\n                          value={ing.name}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                );\n              })}\n              <div className=\"col\">\n                <a className=\"nav-link col w-100\">Add Ingredients</a>\n              </div>\n              {/* {inputs} */}\n            </div>\n          </div>\n          <div className=\"col\">\n            <label htmlFor=\"Servings\" className=\"fw-bold form-label\">\n              Servings:\n            </label>\n            <input\n              type=\"text\"\n              name=\"servings\"\n              className=\"form-control\"\n              id=\"Servings\"\n              value={servings}\n              onChange={handleInputChange}\n            />\n\n            <label htmlFor=\"PrepTime\" className=\"fw-bold form-label\">\n              Preperation Time:\n            </label>\n            <input\n              type=\"text\"\n              name=\"prepTime\"\n              className=\"form-control\"\n              id=\"PrepTime\"\n              value={prepTime}\n              onChange={handleInputChange}\n            />\n            <label htmlFor=\"CookTime\" className=\"fw-bold form-label\">\n              Cooking Time:\n            </label>\n            <input\n              type=\"text\"\n              name=\"cookTime\"\n              className=\"form-control\"\n              id=\"CookTime\"\n              value={cookTime}\n              onChange={handleInputChange}\n            />\n            <div className=\"row mb-3 mt-3 col\">\n              <div className=\"col\">\n                <label htmlFor=\"Ingredients\" className=\"fw-bold form-label\">\n                  Directions:\n                </label>\n              </div>\n              <div className=\"col\"></div>\n            </div>\n            {directionsArr.map((dir, i) => {\n              const select = params => {\n                if (params === true) {\n                  return (\n                    <select\n                      className=\"form-select\"\n                      name=\"optional\"\n                      id=\"optional\"\n                      aria-label=\"Default select example\"\n                    >\n                      <option defaultValue>Choose:</option>\n                      <option selected value=\"true\">\n                        True\n                      </option>\n                      <option value=\"false\">False</option>\n                    </select>\n                  );\n                } else {\n                  return (\n                    <select\n                      className=\"form-select\"\n                      name=\"optional\"\n                      id=\"optional\"\n                      aria-label=\"Default select example\"\n                    >\n                      <option defaultValue>Choose:</option>\n                      <option value=\"true\">True</option>\n                      <option selected value=\"false\">\n                        False\n                      </option>\n                    </select>\n                  );\n                }\n              };\n              return (\n                <div className=\"row mb-3 col\">\n                  <div className=\"col-9\">\n                    <label htmlFor=\"Instructions\" className=\"form-label\">\n                      {i >= 0 ? `Instruction ${i + 1}` : \"\"}\n                    </label>\n                    <input\n                      type=\"text\"\n                      name=\"instructions\"\n                      className=\"form-control\"\n                      id=\"Instructions\"\n                      value={dir.instructions}\n                    />\n                  </div>\n\n                  <div className=\"col-3\">\n                    <label htmlFor=\"optional\" className=\"form-label\">\n                      Optional\n                    </label>\n\n                    {select(dir.optional)}\n                  </div>\n                </div>\n              );\n            })}\n            <a className=\"nav-link col w-100\">Add Instructions</a>\n            {/* {instructions} */}\n          </div>\n        </div>\n      </div>\n      <input\n        className=\"btn btn-primary col-3 m-auto\"\n        type=\"submit\"\n        value=\"Update\"\n      />\n    </form>\n  );\n};\n\nexport default RecipeEdit;\n","/Users/hannaclaros/Desktop/dadada/React/recipe-app/src/components/Recipes/recipeAdd.jsx",["63","64","65"],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":9,"column":6,"nodeType":"72","endLine":9,"endColumn":8,"suggestions":"73"},{"ruleId":"74","severity":1,"message":"75","line":17,"column":9,"nodeType":"76","messageId":"77","endLine":17,"endColumn":31},{"ruleId":"78","severity":1,"message":"79","line":116,"column":17,"nodeType":"80","endLine":116,"endColumn":51},{"ruleId":"78","severity":1,"message":"79","line":223,"column":13,"nodeType":"80","endLine":223,"endColumn":47},{"ruleId":"78","severity":1,"message":"79","line":160,"column":15,"nodeType":"80","endLine":163,"endColumn":16},{"ruleId":"74","severity":1,"message":"81","line":209,"column":37,"nodeType":"76","messageId":"77","endLine":209,"endColumn":45},{"ruleId":"78","severity":1,"message":"79","line":247,"column":13,"nodeType":"80","endLine":247,"endColumn":78},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'specialMatch'. Either include it or remove the dependency array.","ArrayExpression",["84"],"no-unused-vars","'handleIngredientChange' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'optional' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"85","fix":"86"},"Update the dependencies array to be: [specialMatch]",{"range":"87","text":"88"},[255,257],"[specialMatch]"]